classdef PhotonSeriesIOTest < tests.system.PyNWBIOTest
  methods    
    function addContainer(testCase, file) %#ok<INUSL>
      oc = types.OpticalChannel( ...
        'source', {'unit test TestImagingPlaneIO'}, ...
        'description', {'a fake OpticalChannel'}, ...
        'emission_lambda', {'3.14'});
      ip = types.ImagingPlane( ...
        'source', {'unit test TestImagingPlaneIO'}, ...
        'description', {'a fake ImagingPlane'}, ...
        'groups', struct('optchan1', oc), ...
        'device', {'imaging_device_1'}, ...
        'excitation_lambda', {'6.28'}, ...
        'imaging_rate', {'2.718'}, ...
        'indicator', {'GFP'}, ...
        'location', {'somewhere in the brain'});
      file.general.optophysiology = types.untyped.Group();
      file.general.optophysiology.imgpln1 = ip;
      tps = types.TwoPhotonSeries( ...
        'source', {'unit test TestTwoPhotonSeries'}, ...
        'data', int32([0:9;10:19])', ...
        'imaging_plane', types.untyped.Link('/general/optophysiology/imgpln1', '', ip), ...
        'data_unit', {'image_unit'}, ...
        'format', {'raw'}, ...
        'field_of_view', [2, 2, 5]', ...
        'pmt_gain', 1.7, ...
        'scan_line_rate', 3.4, ...
        'timestamps', (0:9)', ...
        'dimension', 2);
      file.acquisition.timeseries = types.untyped.Group();
      file.acquisition.timeseries.test_2ps = tps;
    end
    
    function c = getContainer(testCase, file) %#ok<INUSL>
      c = file.acquisition.timeseries.test_2ps;
    end
  end
end

